import os
from matplotlib import pyplot
import visualkeras
from PIL import ImageFont


# Ensure that the necessary directories exist
def ensure_dir(file_path):
    directory = os.path.dirname(file_path)
    if not os.path.exists(directory):
        os.makedirs(directory)


# plotting diagnostic learning curves
def summarize_diagnostics(history, base_dir):
    # Paths for the plots
    loss_plot_path = os.path.join(base_dir, "loss_plot.png")
    accuracy_plot_path = os.path.join(base_dir, "accuracy_plot.png")

    ensure_dir(loss_plot_path)
    ensure_dir(accuracy_plot_path)

    # Plotting loss
    pyplot.figure()
    pyplot.plot(history.history["loss"], color="blue", label="train")
    pyplot.plot(history.history["val_loss"], color="orange", label="validation")
    pyplot.title("Model Loss")
    pyplot.ylabel("Loss")
    pyplot.xlabel("Epoch")
    pyplot.legend(["Train", "Validation"], loc="upper right")
    pyplot.savefig(loss_plot_path)
    pyplot.close()

    # Plotting accuracy
    pyplot.figure()
    pyplot.plot(history.history["accuracy"], color="blue", label="train")
    pyplot.plot(history.history["val_accuracy"], color="orange", label="validation")
    pyplot.title("Model Accuracy")
    pyplot.ylabel("Accuracy")
    pyplot.xlabel("Epoch")
    pyplot.legend(["Train", "Validation"], loc="upper left")
    pyplot.savefig(accuracy_plot_path)
    pyplot.close()


def plot_dataset(sizes, base_dir):
    # Path for the pie chart
    pie_chart_path = os.path.join(base_dir, "dataset_pie.png")

    ensure_dir(pie_chart_path)

    labels = "Train", "Validation", "Test"
    explode = (0, 0, 0.1)  # only "explode" the 3rd slice (Test)

    # Create a new figure
    pyplot.figure()

    # Plot pie chart
    pyplot.pie(
        sizes,
        explode=explode,
        labels=labels,
        autopct="%1.1f%%",
        shadow=True,
        startangle=90,
    )

    # Save the figure
    pyplot.savefig(pie_chart_path)

    # Optionally display the plot
    # pyplot.show()
    pyplot.close()


def visualize_model(model, base_dir):
    # Path for the model visualization
    model_visual_path = os.path.join(base_dir, "model_visual.png")

    ensure_dir(model_visual_path)

    try:
        # Load the font (may need to adjust path based on your system)
        font = ImageFont.truetype("arial.ttf", 32)
    except IOError:
        # In case the specific font is not found, fall back to a default one
        font = ImageFont.load_default()

    try:
        # Generate the visualization
        visualkeras.layered_view(
            model, legend=True, font=font, to_file=model_visual_path
        )
    except Exception as e:
        print(f"An error occurred while visualizing the model: {e}")
