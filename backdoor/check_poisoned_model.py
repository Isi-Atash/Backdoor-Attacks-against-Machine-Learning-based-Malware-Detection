from keras.models import load_model
import numpy as np

# Load the trained model
model = load_model(r"D:\Repos\mw-detection-using-image\models\best_model_poisoned_1.h5")

# Load the data
images = np.load(
    r"D:\Repos\mw-detection-using-image\data\backdoor_data\npy\img_list_poisoned_test_1.npy"
)
labels = np.load(
    r"D:\Repos\mw-detection-using-image\data\backdoor_data\npy\labels_poisoned_test_1.npy"
)

print(f"Images shape: {images.shape}")
print(f"Labels shape: {labels.shape}")

# Predict the labels for the images
predictions = model.predict(images)

# Convert predictions to binary class labels
predicted_classes = [1 if p > 0.5 else 0 for p in predictions]

# Display the predictions
for i, prediction in enumerate(predicted_classes):
    actual_label = labels[i]
    print(f"Image {i}: Predicted Class = {prediction}, Actual Class = {actual_label}")

# Evaluate the model
loss, accuracy = model.evaluate(images, labels)
print(f"Loss: {loss}")
print(f"Accuracy: {accuracy * 100}%")
